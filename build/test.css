/** @define Test */

/**
 * The 'describe' CSS counter
 */

.Test {
  counter-reset: test-describe;
}

.Test-describe::before {
  content: counter(test-describe);
  counter-increment: test-describe;
}

/**
 * The 'it' CSS counter
 */

.Test-describe {
  counter-reset: test-it;
}

.Test-it::before {
  content: counter(test-describe) "." counter(test-it);
  counter-increment: test-it;
}

/**
 * The test title
 */

.Test-title {
  background: #eee;
  color: #999;
  font-family: sans-serif;
  font-size: 2em;
  margin: 20px 0;
  padding: 20px;
}

/**
 * The test description and expectation titles
 */

.Test-describe,
.Test-it {
  background: #eee;
  border-left: 5px solid #666;
  color: #666;
  font-family: sans-serif;
  font-weight: bold;
  margin: 20px 0;
  padding: 0.75em 20px;
}

.Test-describe {
  font-size: 1.5em;
  margin: 60px 0 20px;
}

/**
 * The counter styles
 */

.Test-describe::before,
.Test-it::before {
  color: #999;
  display: inline-block;
  margin-right: 10px;
  min-width: 30px;
  text-transform: uppercase;
}

/** @define Dropdown */

.Dropdown {
  display: inline-block;
  position: relative;
}

.Dropdown-menu {
  background-clip: padding-box;
  background-color: #fff;
  border: 1px solid currentColor;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  left: -99999px;
  margin: 0;
  padding: 0.25rem 0;
  position: absolute;
  z-index: 1;
}

/* postcss-bem-linter: ignore */

[dir="rtl"] .Dropdown-menu {
  left: auto;
  right: -99999px;
}

.Dropdown.is-expanded .Dropdown-menu {
  left: auto;
}

/* postcss-bem-linter: ignore */

[dir="rtl"] .Dropdown.is-expanded .Dropdown-menu {
  right: auto;
}

/**
 * Modifier: Dropdown-menu--inversePosition
 * Inverts the dropdown menu position by placing it on the right.
 * If the direction is explicitly set to rtl [dir="rtl"]
 * then it places the dropdown menu on the left.
 */

.Dropdown.is-expanded .Dropdown-menu--inversePosition {
  left: auto;
  right: 0;
}

/* postcss-bem-linter: ignore */

[dir="rtl"] .Dropdown.is-expanded .Dropdown-menu--inversePosition {
  left: 0;
  right: auto;
}

/**
 * Modifier: Dropdown-menu--bottomPosition
 * Shows the dropdown menu at the bottom
 */

.Dropdown-menu--bottom {
  bottom: 100%;
}

.Dropdown-item,
.Dropdown-link {
  display: block;
  padding: 0.25rem
    0.75rem;
}

.Dropdown-item {
  white-space: nowrap;
}

.Dropdown-item--separated {
  border-top: 1px solid currentColor;
}

.Dropdown-link {
  color: currentColor;
  margin: -0.25rem
    -0.75rem;
  text-decoration: none;
}

.Dropdown-link:hover,
.Dropdown-link:focus,
.Dropdown-link.is-active,
.Dropdown-item.is-active,
.Dropdown-item.is-active > .Dropdown-link,
.Dropdown-link.\:hover,
.Dropdown-link.\:focus {
  background-color: #eee;
  color: currentColor;
}

.Dropdown-link:active,
.Dropdown-link.\:active {
  box-shadow: inset 0 0 99999px rgba(0, 0, 0, 0.3);
}

/* Accessibility checks */

.Dropdown-toggle::after {
  content: "Dropdown-toggle not accessible: missing aria-controls, aria-expanded or aria-haspopup attributes";
}

.Dropdown-menu::after {
  content: "Dropdown-menu not accessible: missing role=\"menu\" or aria-hidden attributes";
}

.Dropdown-item::after {
  content: "Dropdown-item not accessible: missing role=\"menuitem\" attribute";
}

.Dropdown-toggle::after,
.Dropdown-menu::after,
.Dropdown-item::after {
  background-color: #f00;
  bottom: 100%;
  color: #fff;
  display: block;
  padding: 0.5em;
}

.Dropdown-toggle[aria-controls][aria-expanded][aria-haspopup]::after,
.Dropdown-menu[role="menu"][aria-hidden]::after,
.Dropdown-item[role="menuitem"]::after {
  content: "";
  display: none;
}


